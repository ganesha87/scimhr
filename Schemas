{
  "request": {
    "Header": {
      "sec-fetch-mode": "cors",
      "referer": "https://admin.aquera.io/securehome/orchestrations/ec219767-0137-3dcf-aa02-a620d7f98e9f/d99f1ec3-d9f1-6e62-e431-ca0c2d24c8cd",
      "sec-fetch-site": "same-site",
      "accept-language": "en-US,en;q=0.9",
      "x-forwarded-proto": "https",
      "origin": "https://admin.aquera.io",
      "x-forwarded-port": "443",
      "x-forwarded-for": "106.51.74.238",
      "x-user-agent": "Aquera-Console",
      "accept": "application/json, text/plain, */*",
      "host": "api.aquera.io",
      "connection": "keep-alive",
      "accept-encoding": "gzip, deflate, br",
      "sec-fetch-dest": "empty",
      "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
    },
    "url": "http://api.aquera.io/scim/51f936555042/ad8e8723-8f41-bf99-54a5-af0bad87f92a/aqueravik/Schemas"
  }
},
{
  "response": {
    "Header": {
      "Content-Type": "application/json"
    },
    "Body": {
      "totalResults": 3,
      "startIndex": 1,
      "Resources": [
        {
          "name": "User",
          "description": "User Account",
          "attributes": [
            {
              "uniqueness": "server",
              "name": "userName",
              "description": "Unique identifier for the User, typically\r\nused by the user to directly authenticate to the service provider.\r\nEach User MUST include a non-empty userName value.  This identifier\r\nMUST be unique across the service provider's entire set of Users.\r\nREQUIRED.",
              "mutability": "readWrite",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": true
            },
            {
              "name": "name",
              "description": "The components of the user's real name.\r\nProviders MAY return just the full name as a single string in the\r\nformatted sub-attribute, or they MAY return just the individual\r\ncomponent attributes using the other sub-attributes, or they MAY\r\nreturn both.  If both variants are returned, they SHOULD be\r\ndescribing the same name, with the formatted name indicating how the\r\ncomponent attributes should be combined.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": false,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "none",
                  "name": "formatted",
                  "description": "The full name, including all middle\r\nnames, titles, and suffixes as appropriate, formatted for display\r\n(e.g., 'Ms. Barbara J Jensen, III').",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "familyName",
                  "description": "The family name of the User, or\r\nlast name in most Western languages (e.g., 'Jensen' given the full\r\nname 'Ms. Barbara J Jensen, III').",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "givenName",
                  "description": "The given name of the User, or\r\nfirst name in most Western languages (e.g., 'Barbara' given the\r\nfull name 'Ms. Barbara J Jensen, III').",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                }
              ]
            },
            {
              "name": "active",
              "description": "A Boolean value indicating the User's\r\nadministrative status.",
              "mutability": "readWrite",
              "type": "boolean",
              "multiValued": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "none",
              "name": "title",
              "description": "The User's title.",
              "mutability": "readWrite",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "never",
              "required": false
            },
            {
              "uniqueness": "none",
              "name": "profileUrl",
              "referenceTypes": [
                "external"
              ],
              "description": "A fully qualified URL pointing to a page representing the User's online profile.",
              "mutability": "readWrite",
              "type": "reference",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "name": "emails",
              "description": "Email addresses for the user.  The value\r\nSHOULD be canonicalized by the service provider, e.g.,\r\n'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.\r\nCanonical type values of 'work', 'home', and 'other'.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": true,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "none",
                  "name": "value",
                  "description": "Email addresses for the user.  The value\r\nSHOULD be canonicalized by the service provider, e.g.,\r\n'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.\r\nCanonical type values of 'work', 'home', and 'other'.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "name": "primary",
                  "description": "A Boolean value indicating the 'primary'\r\nor preferred attribute value for this attribute, e.g., the preferred\r\nmailing address or primary email address.  The primary attribute\r\nvalue 'true' MUST appear no more than once.",
                  "mutability": "readWrite",
                  "type": "boolean",
                  "multiValued": false,
                  "returned": "default",
                  "required": false
                }
              ]
            },
            {
              "name": "addresses",
              "description": "A physical mailing address for this User.\r\nCanonical type values of 'work', 'home', and 'other'.  This attribute\r\nis a complex type with the following sub-attributes.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": true,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "none",
                  "name": "formatted",
                  "description": "The full mailing address, formatted for\r\ndisplay or use with a mailing label.  This attribute MAY contain\r\nnewlines.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "streetAddress",
                  "description": "The full street address component,\r\nwhich may include house number, street name, P.O. box, and multi-line\r\nextended street address information.  This attribute MAY contain\r\nnewlines.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "locality",
                  "description": "The city or locality component.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "region",
                  "description": "The state or region component.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "postalCode",
                  "description": "The zip code or postal code component.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "country",
                  "description": "The country name component.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                },
                {
                  "uniqueness": "none",
                  "name": "type",
                  "description": "A label indicating the attribute's\r\nfunction, e.g., 'work' or 'home'.",
                  "canonicalValues": [
                    "work",
                    "home",
                    "other"
                  ],
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                }
              ]
            },
            {
              "multiValuedAttributeChildName": "phoneNumber",
              "name": "phoneNumbers",
              "description": "Phone numbers for the User. The value SHOULD be canonicalized by the Service Provider according to format in RFC3966 e.g. 'tel:+1-201-555-0123'. Canonical Type values of work, home, mobile, fax, pager and other.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": true,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "server",
                  "name": "value",
                  "description": "Phone numbers for the User. The value SHOULD be canonicalized by the Service Provider according to format in RFC3966 e.g. 'tel:+1-201-555-0123'. Canonical Type values of work, home, mobile, fax, pager and other.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "returned": "default",
                  "caseExact": false,
                  "required": true
                },
                {
                  "uniqueness": "server",
                  "name": "type",
                  "description": "A label indicating the attribute’s function; e.g., 'work' or 'home'.",
                  "canonicalValues": [
                    "work",
                    "home",
                    "mobile",
                    "pager",
                    "fax",
                    "other"
                  ],
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "returned": "default",
                  "caseExact": false,
                  "required": false
                },
                {
                  "uniqueness": "server",
                  "name": "primary",
                  "description": "A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred mailing address or primary e-mail address. The primary attribute value 'true' MUST appear no more than once.",
                  "mutability": "readWrite",
                  "type": "boolean",
                  "multiValued": false,
                  "returned": "default",
                  "required": false
                }
              ]
            },
            {
              "name": "roles",
              "description": "A list of roles for the User that\r\ncollectively represent who the User is, e.g., 'Student', 'Faculty'.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": true,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "none",
                  "name": "value",
                  "description": "The value of a role.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "caseExact": false,
                  "returned": "default",
                  "required": false
                }
              ]
            }
          ],
          "id": "urn:ietf:params:scim:schemas:core:2.0:User",
          "meta": {
            "location": "Schemas/urn:ietf:params:scim:schemas:core:2.0:User",
            "resourceType": "Schema"
          }
        },
        {
          "name": "EnterpriseUser",
          "description": "EnterpriseUser",
          "attributes": [
            {
              "uniqueness": "server",
              "name": "employeeNumber",
              "description": "Numeric or alphanumeric identifier assigned to a person, typically based on order of hire or association with an organization.",
              "mutability": "readWrite",
              "type": "string",
              "multiValued": false,
              "returned": "default",
              "caseExact": false,
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "division",
              "description": "Identifies the name of a division.",
              "mutability": "readWrite",
              "type": "string",
              "multiValued": false,
              "returned": "default",
              "caseExact": false,
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "department",
              "description": "Identifies the name of a department.",
              "mutability": "readWrite",
              "type": "string",
              "multiValued": false,
              "returned": "default",
              "caseExact": false,
              "required": false
            },
            {
              "name": "manager",
              "description": "The User's manager. A complex type that optionally allows Service Providers to represent organizational hierarchy by referencing the \"id\" attribute of another User.",
              "mutability": "readWrite",
              "type": "complex",
              "multiValued": false,
              "returned": "default",
              "required": false,
              "subAttributes": [
                {
                  "uniqueness": "server",
                  "name": "managerId",
                  "description": "The id of the SCIM resource representing the User's manager. REQUIRED.",
                  "mutability": "readWrite",
                  "type": "string",
                  "multiValued": false,
                  "returned": "default",
                  "caseExact": false,
                  "required": false
                }
              ]
            }
          ],
          "id": "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
          "meta": {
            "location": "Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
            "created": "2019-02-24T21:43:05.173-06:00",
            "resourceType": "Schema"
          }
        },
        {
          "name": "IANUser",
          "description": "IAN",
          "attributes": [
            {
              "uniqueness": "server",
              "name": "gender",
              "description": "Gender of Employee",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "hireDate",
              "description": "User hiredate",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "linkedIn",
              "description": "User's linkedIn detail",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "photoUploaded",
              "description": "User photoUploaded",
              "mutability": "readOnly",
              "type": "boolean",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "location",
              "description": "User's location",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "server",
              "name": "workPhoneExtension",
              "description": "User workPhoneExtension",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            },
            {
              "uniqueness": "none",
              "name": "photo",
              "description": "Base64 string of the display photo",
              "mutability": "readOnly",
              "type": "string",
              "multiValued": false,
              "caseExact": false,
              "returned": "default",
              "required": false
            }
          ],
          "id": "urn:ietf:params:scim:schemas:ian:2.0:User",
          "meta": {
            "location": "Schemas/urn:ietf:params:scim:schemas:ian:2.0:User",
            "resourceType": "Schema"
          }
        }
      ],
      "itemsPerPage": 3,
      "schemas": [
        "urn:ietf:params:scim:api:messages:2.0:ListResponse"
      ]
    }
  }
}
